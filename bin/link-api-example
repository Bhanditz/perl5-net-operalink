#!/usr/bin/env perl
#
# Get your Opera Link speeddials and bookmarks
#

use strict;
use warnings;

use lib '../lib';

use Data::Dumper;
use Net::OperaLink;

# Opera Link consumer key and secret. Put yours here.
our $key    = 'demo_key';
our $secret = 'demo_secret';

# Read tokens from a file for next time
sub restore_tokens {
	# Instead of hardcoding, you should load them from some file or db
    return qw(
ATvYJQU99GsSLInTl9VcR0UYtzttgd9y
hYpTXAlMPVQYPWQPxjURNGZEFjON4v9i
    );
}

# Save tokens to a file or database
sub save_tokens {
	# Instead of printing, you should save them somewhere, to retrieve them later
    print 'oauth_token: ', $_[0], "\n",
          'oauth_token_secret: ', $_[1], "\n";
}

my $link = Net::OperaLink->new(
    consumer_key    => $key,
    consumer_secret => $secret,
);

# You'll save the token and secret in cookie, config file or session database
my ($access_token, $access_token_secret) = restore_tokens();
if ($access_token && $access_token_secret) {
    $link->access_token($access_token);
    $link->access_token_secret($access_token_secret);
}

unless ($link->authorized) {
    # The client is not yet authorized: Do it now
    print "Authorize this app at ", $link->get_authorization_url, " and type ENTER to continue\n";

	<STDIN>;

	# Add verifier support when we're OAuth 1.0a compliant
    my($access_token, $access_token_secret) = $link->request_access_token();

    save_tokens($access_token, $access_token_secret); # if necessary
}

my $res = $link->speeddial(1);
if (not defined $res) {
    print 'Error: ', $link->error(), "\n";
}
else {
    print Dumper($res), "\n";
}

$res = $link->bookmarks();
if (not defined $res) {
    print 'Error: ', $link->error(), "\n";
}
else {
    print Dumper($res), "\n";
}

$res = $link->bookmark("C2C69E604EE811DF8536E0FA4A1F0025");
if (not defined $res) {
    print 'Error: ', $link->error(), "\n";
}
else {
    print Dumper($res), "\n";
}
